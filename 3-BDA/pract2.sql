CREATE TABLE BOOK
    (BOOK_CODE CHAR(5 BYTE),
    TITLE VARCHAR2(70 CHAR) NOT NULL,
    YEAR NUMBER(4,0),
    AUTHOR VARCHAR2(80 CHAR) NOT NULL,
    CONSTRAINT PK_BOOK PRIMARY KEY (BOOK_CODE));


CREATE TABLE MOVIE
    (MOVIE_CODE CHAR(5 BYTE),
    TITLE VARCHAR2(70 CHAR) NOT NULL,
    YEAR NUMBER(4,0),
    LENGTH NUMBER(4,0) NOT NULL,
    BOOK_CODE CHAR(5 BYTE),
    DIRECTOR VARCHAR2(70 CHAR),
    CHECK (length > 0),
    CONSTRAINT PK_MOVIE PRIMARY KEY (MOVIE_CODE),
    CONSTRAINT FK_MOVIE_BOOK FOREIGN KEY (BOOK_CODE)
    REFERENCES BOOK (BOOK_CODE)); 
    
CREATE TABLE ACTOR 
    (ACT_CODE CHAR(5 BYTE),
    NAME VARCHAR2(70 BYTE) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    COUNTRY_NAME VARCHAR2(20 BYTE) NOT NULL,
    CONSTRAINT PK_ACTOR PRIMARY KEY  (ACT_CODE));
    
CREATE TABLE ACTS
(ACT_CODE CHAR(5),
MOVIE_CODE CHAR(5),
ROLE CHAR(10) NOT NULL,
CHECK(role IN('Principal','Secundario')),
CONSTRAINT PK_ACTS PRIMARY KEY (ACT_CODE,MOVIE_CODE),
CONSTRAINT FK_ACTS_MOVIE FOREIGN KEY (MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE),
CONSTRAINT FK_ACTS_ACTOR FOREIGN KEY (ACT_CODE) REFERENCES ACTOR(ACT_CODE));


/*Insert into the Book table all the rows from the CS_Libro table.*/
INSERT INTO BOOK (SELECT * FROM CS_Libro);

/*Insert into the Movie table all the movies from the CS_Pelicula table released after 2000.*/
INSERT INTO MOVIE(
SELECT * FROM CS_PELICULA WHERE ANYO>2000);

/*Insert into the Actor table all the actors from CS_Actor acting in movies released after 2000*/
INSERT INTO ACTOR(
SELECT * FROM CS_ACTOR A WHERE A.COD_ACT IN(SELECT ACT.COD_ACT FROM CS_ACTUA ACT,CS_PELICULA P
WHERE ACT.COD_PELI=P.COD_PELI AND P.ANYO>2000));

/*Insert into the Acts table all the rows from CS_Actua corresponding to movies released after 2000*/
INSERT INTO ACTS(
SELECT COD_ACT,COD_PELI,PAPEL FROM CS_ACTUA WHERE COD_PELI IN (SELECT COD_PELI FROM CS_PELICULA WHERE ANYO>2000));

COMMIT;

UPDATE ACTOR A
    SET A.COUNTRY_NAME=(SELECT NOMBRE FROM CS_PAIS P WHERE P.COD_PAIS=A.COUNTRY_NAME);
